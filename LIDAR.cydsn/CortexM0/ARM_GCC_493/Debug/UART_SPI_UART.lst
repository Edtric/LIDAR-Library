ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_SPI_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_SpiUartWriteTxData,"ax",%progbits
  18              		.align	2
  19              		.global	UART_SpiUartWriteTxData
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_SpiUartWriteTxData, %function
  23              	UART_SpiUartWriteTxData:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\UART_SPI_UART.c"
   1:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * File Name: UART_SPI_UART.c
   3:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Version 3.0
   4:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
   5:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Description:
   6:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  SPI and UART modes.
   8:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
   9:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Note:
  10:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
  11:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************
  12:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  18:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_PVT.h"
  19:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_SPI_UART_PVT.h"
  20:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  21:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /***************************************
  22:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *        SPI/UART Private Vars
  23:.\Generated_Source\PSoC4/UART_SPI_UART.c **** ***************************************/
  24:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  25:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
  26:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferHead;
  27:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferTail;
  28:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8  UART_rxBufferOverflow;
  29:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  30:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  31:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
  32:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferHead;
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 2


  33:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferTail;
  34:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
  35:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  36:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER)
  37:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Add one element to the buffer to receive full packet. One byte in receive buffer is always e
  38:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_rxBufferInternal[UART_INTERNAL_RX_BUFFER_SIZE];
  39:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER) */
  40:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  41:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER)
  42:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_txBufferInternal[UART_TX_BUFFER_SIZE];
  43:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER) */
  44:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  45:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  46:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_RX_DIRECTION)
  47:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
  48:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartReadRxData
  49:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
  50:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  51:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
  52:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Retrieves the next data element from the receive buffer.
  53:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is disabled: Returns data element retrieved from
  54:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO. Undefined data will be returned if the RX FIFO is empty.
  55:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is enabled: Returns data element from the software
  56:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     receive buffer. Zero value is returned if the software receive buffer
  57:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     is empty.
  58:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  59:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
  60:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
  61:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  62:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
  63:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Next data element from the receive buffer.
  64:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  65:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Global Variables:
  66:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Look into UART_SpiInit for description.
  67:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  68:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
  69:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartReadRxData(void)
  70:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  71:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 rxData = 0u;
  72:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  73:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
  74:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
  75:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  76:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  77:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
  78:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
  79:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_rxBufferHead != UART_rxBufferTail)
  80:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
  81:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* There is data in RX software buffer */
  82:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  83:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Calculate index to read from */
  84:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 locTail = (UART_rxBufferTail + 1u);
  85:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  86:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_INTERNAL_RX_BUFFER_SIZE == locTail)
  87:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
  88:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     locTail = 0u;
  89:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 3


  90:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  91:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Get data from RX software buffer */
  92:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 rxData = UART_GetWordFromRxBuffer(locTail);
  93:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  94:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Change index in the buffer */
  95:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_rxBufferTail = locTail;
  96:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  97:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
  98:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
  99:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Check if RX Not Empty is disabled in the interrupt */
 100:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     if (0u == (UART_INTR_RX_MASK_REG & UART_INTR_RX_NOT_EMPTY))
 101:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     {
 102:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         /* Enable RX Not Empty interrupt source to continue
 103:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         * receiving data into software buffer.
 104:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         */
 105:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 106:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     }
 107:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 108:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 #endif
 109:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 110:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 111:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 112:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 113:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 114:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Read data from RX FIFO */
 115:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
 116:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 117:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 118:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 119:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         return (rxData);
 120:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 121:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 122:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 123:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 124:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetRxBufferSize
 125:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 126:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 127:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 128:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Returns the number of received data elements in the receive buffer.
 129:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer disabled: returns the number of used entries in
 130:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO.
 131:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer enabled: returns the number of elements which were
 132:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     placed in the receive buffer. This does not include the hardware RX FIFO.
 133:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 134:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 135:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 136:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 137:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 138:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of received data elements
 139:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 140:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 141:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetRxBufferSize(void)
 142:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 143:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 144:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
 145:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 146:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 4


 147:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 148:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 149:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 150:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             locHead = UART_rxBufferHead;
 151:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 152:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if(locHead >= UART_rxBufferTail)
 153:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 154:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead - UART_rxBufferTail);
 155:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 156:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 157:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 158:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead + (UART_INTERNAL_RX_BUFFER_SIZE - UART_rxBufferTail));
 159:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 160:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 161:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 162:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 163:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_RX_FIFO_ENTRIES;
 164:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 165:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 166:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 167:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
 168:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 169:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 170:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 171:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 172:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearRxBuffer
 173:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 174:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 175:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 176:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the receive buffer and RX FIFO.
 177:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 178:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 179:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 180:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 181:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 182:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 183:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 184:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 185:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearRxBuffer(void)
 186:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 187:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 188:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 189:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 190:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 191:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 192:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush RX software buffer */
 193:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferHead = UART_rxBufferTail;
 194:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferOverflow = 0u;
 195:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 196:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 197:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ALL);
 198:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 199:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
 200:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 201:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Enable RX Not Empty interrupt source to continue receiving
 202:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 * data into software buffer.
 203:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 */
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 5


 204:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 205:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 206:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             #endif
 207:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 208:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 209:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 210:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 211:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 212:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 213:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 214:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 215:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 216:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 217:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 218:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_RX_DIRECTION) */
 219:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 220:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 221:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_TX_DIRECTION)
 222:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 223:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartWriteTxData
 224:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 225:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 226:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 227:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places a data entry into the transmit buffer to be sent at the next available
 228:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  bus time.
 229:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is space available to put the
 230:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  requested data in the transmit buffer.
 231:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 232:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 233:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  txDataByte: the data to be transmitted.
 234:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 235:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 236:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 237:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 238:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 239:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartWriteTxData(uint32 txData)
 240:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  26              		.loc 1 240 0
  27              		.cfi_startproc
  28              	.LVL0:
  29              	.L2:
 241:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 242:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 243:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 244:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 245:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 246:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 247:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data directly into the TX FIFO */
 248:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if ((UART_txBufferHead == UART_txBufferTail) &&
 249:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 (UART_SPI_UART_FIFO_SIZE != UART_GET_TX_FIFO_ENTRIES))
 250:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 251:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer is empty: put data directly in TX FIFO */
 252:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_TX_FIFO_WR_REG = txData;
 253:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 254:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data into TX software buffer */
 255:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 256:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 6


 257:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Head index to put data */
 258:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 locHead = (UART_txBufferHead + 1u);
 259:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 260:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Adjust TX software buffer index */
 261:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_TX_BUFFER_SIZE == locHead)
 262:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 263:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     locHead = 0u;
 264:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 265:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 266:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Wait for space in TX software buffer */
 267:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 while (locHead == UART_txBufferTail)
 268:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 269:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 270:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 271:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer has at least one room */
 272:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 273:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Clear old status of INTR_TX_NOT_FULL. It sets at the end of transfer when TX FIF
 274:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_ClearTxInterruptSource(UART_INTR_TX_NOT_FULL);
 275:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 276:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_PutWordInTxBuffer(locHead, txData);
 277:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 278:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_txBufferHead = locHead;
 279:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 280:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Check if TX Not Full is disabled in interrupt */
 281:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (0u == (UART_INTR_TX_MASK_REG & UART_INTR_TX_NOT_FULL))
 282:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 283:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Enable TX Not Full interrupt source to transmit from software buffer */
 284:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     UART_INTR_TX_MASK_REG |= (uint32) UART_INTR_TX_NOT_FULL;
 285:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 286:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 287:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 288:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 289:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 290:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Wait until TX FIFO has space to put data element */
 291:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             while (UART_SPI_UART_FIFO_SIZE == UART_GET_TX_FIFO_ENTRIES)
  30              		.loc 1 291 0 discriminator 1
  31 0000 044B     		ldr	r3, .L3
  32 0002 1B68     		ldr	r3, [r3]
  33 0004 0F22     		mov	r2, #15
  34 0006 1340     		and	r3, r2
  35 0008 082B     		cmp	r3, #8
  36 000a F9D0     		beq	.L2
 292:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 293:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 294:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 295:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_TX_FIFO_WR_REG = txData;
  37              		.loc 1 295 0
  38 000c 024B     		ldr	r3, .L3+4
  39 000e 1860     		str	r0, [r3]
 296:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 297:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 298:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  40              		.loc 1 298 0
  41              		@ sp needed
  42 0010 7047     		bx	lr
  43              	.L4:
  44 0012 C046     		.align	2
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 7


  45              	.L3:
  46 0014 08020740 		.word	1074201096
  47 0018 40020740 		.word	1074201152
  48              		.cfi_endproc
  49              	.LFE0:
  50              		.size	UART_SpiUartWriteTxData, .-UART_SpiUartWriteTxData
  51              		.section	.text.UART_SpiUartPutArray,"ax",%progbits
  52              		.align	2
  53              		.global	UART_SpiUartPutArray
  54              		.code	16
  55              		.thumb_func
  56              		.type	UART_SpiUartPutArray, %function
  57              	UART_SpiUartPutArray:
  58              	.LFB1:
 299:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 300:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 301:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 302:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartPutArray
 303:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 304:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 305:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 306:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places an array of data into the transmit buffer to be sent.
 307:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is a space available to put
 308:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  all the requested data in the transmit buffer. The array size can be greater
 309:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  than transmit buffer size.
 310:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 311:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 312:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  wrBuf:  pointer to an array with data to be placed in transmit buffer.
 313:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  count:  number of data elements to be placed in the transmit buffer.
 314:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 315:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 316:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 317:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 318:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 319:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartPutArray(const uint8 wrBuf[], uint32 count)
 320:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  59              		.loc 1 320 0
  60              		.cfi_startproc
  61              	.LVL1:
  62 0000 70B5     		push	{r4, r5, r6, lr}
  63              		.cfi_def_cfa_offset 16
  64              		.cfi_offset 4, -16
  65              		.cfi_offset 5, -12
  66              		.cfi_offset 6, -8
  67              		.cfi_offset 14, -4
  68 0002 061C     		mov	r6, r0
  69 0004 0D1C     		mov	r5, r1
  70              	.LVL2:
 321:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 i;
 322:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 323:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         for (i=0u; i < count; i++)
  71              		.loc 1 323 0
  72 0006 0024     		mov	r4, #0
  73 0008 03E0     		b	.L6
  74              	.LVL3:
  75              	.L7:
 324:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 8


 325:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_SpiUartWriteTxData((uint32) wrBuf[i]);
  76              		.loc 1 325 0 discriminator 3
  77 000a 305D     		ldrb	r0, [r6, r4]
  78 000c FFF7FEFF 		bl	UART_SpiUartWriteTxData
  79              	.LVL4:
 323:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
  80              		.loc 1 323 0 discriminator 3
  81 0010 0134     		add	r4, r4, #1
  82              	.LVL5:
  83              	.L6:
 323:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
  84              		.loc 1 323 0 is_stmt 0 discriminator 1
  85 0012 AC42     		cmp	r4, r5
  86 0014 F9D3     		bcc	.L7
 326:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 327:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  87              		.loc 1 327 0 is_stmt 1
  88              		@ sp needed
  89              	.LVL6:
  90              	.LVL7:
  91              	.LVL8:
  92 0016 70BD     		pop	{r4, r5, r6, pc}
  93              		.cfi_endproc
  94              	.LFE1:
  95              		.size	UART_SpiUartPutArray, .-UART_SpiUartPutArray
  96              		.section	.text.UART_SpiUartGetTxBufferSize,"ax",%progbits
  97              		.align	2
  98              		.global	UART_SpiUartGetTxBufferSize
  99              		.code	16
 100              		.thumb_func
 101              		.type	UART_SpiUartGetTxBufferSize, %function
 102              	UART_SpiUartGetTxBufferSize:
 103              	.LFB2:
 328:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 329:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 330:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 331:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetTxBufferSize
 332:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 333:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 334:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 335:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Returns the number of elements currently in the transmit buffer.
 336:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  - TX software buffer is disabled: returns the number of used entries in
 337:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    TX FIFO.
 338:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  - TX software buffer is enabled: returns the number of elements currently
 339:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    used in the transmit buffer. This number does not include used entries in
 340:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    the TX FIFO. The transmit buffer size is zero until the TX FIFO is
 341:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    not full.
 342:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 343:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 344:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 345:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 346:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 347:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of data elements ready to transmit.
 348:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 349:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 350:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetTxBufferSize(void)
 351:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 9


 104              		.loc 1 351 0
 105              		.cfi_startproc
 352:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 353:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 354:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
 355:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 356:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 357:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 358:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 359:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Get current Tail index */
 360:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             locTail = UART_txBufferTail;
 361:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 362:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_txBufferHead >= locTail)
 363:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 364:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead - locTail);
 365:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 366:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 367:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 368:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead + (UART_TX_BUFFER_SIZE - locTail));
 369:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 370:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 371:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 372:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 373:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_TX_FIFO_ENTRIES;
 106              		.loc 1 373 0
 107 0000 024B     		ldr	r3, .L9
 108 0002 1B68     		ldr	r3, [r3]
 109 0004 0F20     		mov	r0, #15
 110 0006 1840     		and	r0, r3
 111              	.LVL9:
 374:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 375:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 376:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 377:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
 378:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 112              		.loc 1 378 0
 113              		@ sp needed
 114 0008 7047     		bx	lr
 115              	.L10:
 116 000a C046     		.align	2
 117              	.L9:
 118 000c 08020740 		.word	1074201096
 119              		.cfi_endproc
 120              	.LFE2:
 121              		.size	UART_SpiUartGetTxBufferSize, .-UART_SpiUartGetTxBufferSize
 122              		.section	.text.UART_SpiUartClearTxBuffer,"ax",%progbits
 123              		.align	2
 124              		.global	UART_SpiUartClearTxBuffer
 125              		.code	16
 126              		.thumb_func
 127              		.type	UART_SpiUartClearTxBuffer, %function
 128              	UART_SpiUartClearTxBuffer:
 129              	.LFB3:
 379:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 380:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 381:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 382:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearTxBuffer
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 10


 383:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 384:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 385:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 386:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the transmit buffer and TX FIFO.
 387:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 388:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 389:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 390:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 391:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 392:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 393:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 394:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 395:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearTxBuffer(void)
 396:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 130              		.loc 1 396 0
 131              		.cfi_startproc
 397:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 398:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 399:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 400:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 401:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 402:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush TX software buffer */
 403:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_txBufferHead = UART_txBufferTail;
 404:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 405:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_INTR_TX_MASK_REG &= (uint32) ~UART_INTR_TX_NOT_FULL;
 406:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 407:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearTxInterruptSource(UART_INTR_TX_ALL);
 408:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 409:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 410:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 411:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 412:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 413:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 414:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 132              		.loc 1 414 0
 133 0000 054B     		ldr	r3, .L12
 134 0002 1A68     		ldr	r2, [r3]
 135 0004 8021     		mov	r1, #128
 136 0006 4902     		lsl	r1, r1, #9
 137 0008 0A43     		orr	r2, r1
 138 000a 1A60     		str	r2, [r3]
 139 000c 1968     		ldr	r1, [r3]
 140 000e 034A     		ldr	r2, .L12+4
 141 0010 0A40     		and	r2, r1
 142 0012 1A60     		str	r2, [r3]
 415:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 416:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 417:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 143              		.loc 1 417 0
 144              		@ sp needed
 145 0014 7047     		bx	lr
 146              	.L13:
 147 0016 C046     		.align	2
 148              	.L12:
 149 0018 04020740 		.word	1074201092
 150 001c FFFFFEFF 		.word	-65537
 151              		.cfi_endproc
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 11


 152              	.LFE3:
 153              		.size	UART_SpiUartClearTxBuffer, .-UART_SpiUartClearTxBuffer
 154              		.section	.text.UART_SpiUartDisableIntRx,"ax",%progbits
 155              		.align	2
 156              		.global	UART_SpiUartDisableIntRx
 157              		.code	16
 158              		.thumb_func
 159              		.type	UART_SpiUartDisableIntRx, %function
 160              	UART_SpiUartDisableIntRx:
 161              	.LFB4:
 418:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 419:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_TX_DIRECTION) */
 420:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 421:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 422:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 423:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntRx
 424:.\Generated_Source\PSoC4/UART_SPI_UART.c **** ********************************************************************************
 425:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 426:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Summary:
 427:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables the RX interrupt sources.
 428:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 429:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Parameters:
 430:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  None
 431:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 432:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Return:
 433:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Returns the RX interrupt sources enabled before the function call.
 434:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 435:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 436:.\Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntRx(void)
 437:.\Generated_Source\PSoC4/UART_SPI_UART.c **** {
 162              		.loc 1 437 0
 163              		.cfi_startproc
 438:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSource;
 439:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 440:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     intSource = UART_GetRxInterruptMode();
 164              		.loc 1 440 0
 165 0000 024B     		ldr	r3, .L15
 166 0002 1868     		ldr	r0, [r3]
 167              	.LVL10:
 441:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 442:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetRxInterruptMode(UART_NO_INTR_SOURCES);
 168              		.loc 1 442 0
 169 0004 0022     		mov	r2, #0
 170 0006 1A60     		str	r2, [r3]
 443:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 444:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSource);
 445:.\Generated_Source\PSoC4/UART_SPI_UART.c **** }
 171              		.loc 1 445 0
 172              		@ sp needed
 173 0008 7047     		bx	lr
 174              	.L16:
 175 000a C046     		.align	2
 176              	.L15:
 177 000c C80F0740 		.word	1074204616
 178              		.cfi_endproc
 179              	.LFE4:
 180              		.size	UART_SpiUartDisableIntRx, .-UART_SpiUartDisableIntRx
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 12


 181              		.section	.text.UART_SpiUartDisableIntTx,"ax",%progbits
 182              		.align	2
 183              		.global	UART_SpiUartDisableIntTx
 184              		.code	16
 185              		.thumb_func
 186              		.type	UART_SpiUartDisableIntTx, %function
 187              	UART_SpiUartDisableIntTx:
 188              	.LFB5:
 446:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 447:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 448:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 449:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntTx
 450:.\Generated_Source\PSoC4/UART_SPI_UART.c **** ********************************************************************************
 451:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 452:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Summary:
 453:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables TX interrupt sources.
 454:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 455:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Parameters:
 456:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  None
 457:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 458:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Return:
 459:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Returns TX interrupt sources enabled before function call.
 460:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 461:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 462:.\Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntTx(void)
 463:.\Generated_Source\PSoC4/UART_SPI_UART.c **** {
 189              		.loc 1 463 0
 190              		.cfi_startproc
 464:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSourceMask;
 465:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 466:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     intSourceMask = UART_GetTxInterruptMode();
 191              		.loc 1 466 0
 192 0000 024B     		ldr	r3, .L18
 193 0002 1868     		ldr	r0, [r3]
 194              	.LVL11:
 467:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 468:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetTxInterruptMode(UART_NO_INTR_SOURCES);
 195              		.loc 1 468 0
 196 0004 0022     		mov	r2, #0
 197 0006 1A60     		str	r2, [r3]
 469:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 470:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSourceMask);
 471:.\Generated_Source\PSoC4/UART_SPI_UART.c **** }
 198              		.loc 1 471 0
 199              		@ sp needed
 200 0008 7047     		bx	lr
 201              	.L19:
 202 000a C046     		.align	2
 203              	.L18:
 204 000c 880F0740 		.word	1074204552
 205              		.cfi_endproc
 206              	.LFE5:
 207              		.size	UART_SpiUartDisableIntTx, .-UART_SpiUartDisableIntTx
 208              		.text
 209              	.Letext0:
 210              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 211              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 13


 212              	.Ldebug_info0:
 213 0000 B0010000 		.4byte	0x1b0
 214 0004 0400     		.2byte	0x4
 215 0006 00000000 		.4byte	.Ldebug_abbrev0
 216 000a 04       		.byte	0x4
 217 000b 01       		.uleb128 0x1
 218 000c 92010000 		.4byte	.LASF27
 219 0010 01       		.byte	0x1
 220 0011 2A020000 		.4byte	.LASF28
 221 0015 A3000000 		.4byte	.LASF29
 222 0019 00000000 		.4byte	.Ldebug_ranges0+0
 223 001d 00000000 		.4byte	0
 224 0021 00000000 		.4byte	.Ldebug_line0
 225 0025 02       		.uleb128 0x2
 226 0026 01       		.byte	0x1
 227 0027 06       		.byte	0x6
 228 0028 61020000 		.4byte	.LASF0
 229 002c 02       		.uleb128 0x2
 230 002d 01       		.byte	0x1
 231 002e 08       		.byte	0x8
 232 002f 8E000000 		.4byte	.LASF1
 233 0033 02       		.uleb128 0x2
 234 0034 02       		.byte	0x2
 235 0035 05       		.byte	0x5
 236 0036 20020000 		.4byte	.LASF2
 237 003a 02       		.uleb128 0x2
 238 003b 02       		.byte	0x2
 239 003c 07       		.byte	0x7
 240 003d 13000000 		.4byte	.LASF3
 241 0041 02       		.uleb128 0x2
 242 0042 04       		.byte	0x4
 243 0043 05       		.byte	0x5
 244 0044 53020000 		.4byte	.LASF4
 245 0048 02       		.uleb128 0x2
 246 0049 04       		.byte	0x4
 247 004a 07       		.byte	0x7
 248 004b 70000000 		.4byte	.LASF5
 249 004f 02       		.uleb128 0x2
 250 0050 08       		.byte	0x8
 251 0051 05       		.byte	0x5
 252 0052 50010000 		.4byte	.LASF6
 253 0056 02       		.uleb128 0x2
 254 0057 08       		.byte	0x8
 255 0058 07       		.byte	0x7
 256 0059 30010000 		.4byte	.LASF7
 257 005d 03       		.uleb128 0x3
 258 005e 04       		.byte	0x4
 259 005f 05       		.byte	0x5
 260 0060 696E7400 		.ascii	"int\000"
 261 0064 02       		.uleb128 0x2
 262 0065 04       		.byte	0x4
 263 0066 07       		.byte	0x7
 264 0067 26000000 		.4byte	.LASF8
 265 006b 04       		.uleb128 0x4
 266 006c 82000000 		.4byte	.LASF9
 267 0070 02       		.byte	0x2
 268 0071 B3       		.byte	0xb3
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 14


 269 0072 2C000000 		.4byte	0x2c
 270 0076 04       		.uleb128 0x4
 271 0077 E2000000 		.4byte	.LASF10
 272 007b 02       		.byte	0x2
 273 007c B5       		.byte	0xb5
 274 007d 48000000 		.4byte	0x48
 275 0081 02       		.uleb128 0x2
 276 0082 04       		.byte	0x4
 277 0083 04       		.byte	0x4
 278 0084 4C000000 		.4byte	.LASF11
 279 0088 02       		.uleb128 0x2
 280 0089 08       		.byte	0x8
 281 008a 04       		.byte	0x4
 282 008b 9C000000 		.4byte	.LASF12
 283 008f 02       		.uleb128 0x2
 284 0090 01       		.byte	0x1
 285 0091 08       		.byte	0x8
 286 0092 5C020000 		.4byte	.LASF13
 287 0096 05       		.uleb128 0x5
 288 0097 00000000 		.4byte	.LASF14
 289 009b 02       		.byte	0x2
 290 009c 5F01     		.2byte	0x15f
 291 009e A2000000 		.4byte	0xa2
 292 00a2 06       		.uleb128 0x6
 293 00a3 76000000 		.4byte	0x76
 294 00a7 02       		.uleb128 0x2
 295 00a8 04       		.byte	0x4
 296 00a9 07       		.byte	0x7
 297 00aa 47010000 		.4byte	.LASF15
 298 00ae 07       		.uleb128 0x7
 299 00af 5E010000 		.4byte	.LASF16
 300 00b3 01       		.byte	0x1
 301 00b4 EF       		.byte	0xef
 302 00b5 00000000 		.4byte	.LFB0
 303 00b9 1C000000 		.4byte	.LFE0-.LFB0
 304 00bd 01       		.uleb128 0x1
 305 00be 9C       		.byte	0x9c
 306 00bf D1000000 		.4byte	0xd1
 307 00c3 08       		.uleb128 0x8
 308 00c4 0C000000 		.4byte	.LASF18
 309 00c8 01       		.byte	0x1
 310 00c9 EF       		.byte	0xef
 311 00ca 76000000 		.4byte	0x76
 312 00ce 01       		.uleb128 0x1
 313 00cf 50       		.byte	0x50
 314 00d0 00       		.byte	0
 315 00d1 09       		.uleb128 0x9
 316 00d2 03010000 		.4byte	.LASF17
 317 00d6 01       		.byte	0x1
 318 00d7 3F01     		.2byte	0x13f
 319 00d9 00000000 		.4byte	.LFB1
 320 00dd 18000000 		.4byte	.LFE1-.LFB1
 321 00e1 01       		.uleb128 0x1
 322 00e2 9C       		.byte	0x9c
 323 00e3 1F010000 		.4byte	0x11f
 324 00e7 0A       		.uleb128 0xa
 325 00e8 88000000 		.4byte	.LASF19
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 15


 326 00ec 01       		.byte	0x1
 327 00ed 3F01     		.2byte	0x13f
 328 00ef 1F010000 		.4byte	0x11f
 329 00f3 00000000 		.4byte	.LLST0
 330 00f7 0A       		.uleb128 0xa
 331 00f8 06000000 		.4byte	.LASF20
 332 00fc 01       		.byte	0x1
 333 00fd 3F01     		.2byte	0x13f
 334 00ff 76000000 		.4byte	0x76
 335 0103 2C000000 		.4byte	.LLST1
 336 0107 0B       		.uleb128 0xb
 337 0108 6900     		.ascii	"i\000"
 338 010a 01       		.byte	0x1
 339 010b 4101     		.2byte	0x141
 340 010d 76000000 		.4byte	0x76
 341 0111 58000000 		.4byte	.LLST2
 342 0115 0C       		.uleb128 0xc
 343 0116 10000000 		.4byte	.LVL4
 344 011a AE000000 		.4byte	0xae
 345 011e 00       		.byte	0
 346 011f 0D       		.uleb128 0xd
 347 0120 04       		.byte	0x4
 348 0121 25010000 		.4byte	0x125
 349 0125 0E       		.uleb128 0xe
 350 0126 6B000000 		.4byte	0x6b
 351 012a 0F       		.uleb128 0xf
 352 012b 76010000 		.4byte	.LASF22
 353 012f 01       		.byte	0x1
 354 0130 5E01     		.2byte	0x15e
 355 0132 76000000 		.4byte	0x76
 356 0136 00000000 		.4byte	.LFB2
 357 013a 10000000 		.4byte	.LFE2-.LFB2
 358 013e 01       		.uleb128 0x1
 359 013f 9C       		.byte	0x9c
 360 0140 53010000 		.4byte	0x153
 361 0144 10       		.uleb128 0x10
 362 0145 6B000000 		.4byte	.LASF21
 363 0149 01       		.byte	0x1
 364 014a 6001     		.2byte	0x160
 365 014c 76000000 		.4byte	0x76
 366 0150 01       		.uleb128 0x1
 367 0151 50       		.byte	0x50
 368 0152 00       		.byte	0
 369 0153 11       		.uleb128 0x11
 370 0154 E9000000 		.4byte	.LASF30
 371 0158 01       		.byte	0x1
 372 0159 8B01     		.2byte	0x18b
 373 015b 00000000 		.4byte	.LFB3
 374 015f 20000000 		.4byte	.LFE3-.LFB3
 375 0163 01       		.uleb128 0x1
 376 0164 9C       		.byte	0x9c
 377 0165 0F       		.uleb128 0xf
 378 0166 33000000 		.4byte	.LASF23
 379 016a 01       		.byte	0x1
 380 016b B401     		.2byte	0x1b4
 381 016d 76000000 		.4byte	0x76
 382 0171 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 16


 383 0175 10000000 		.4byte	.LFE4-.LFB4
 384 0179 01       		.uleb128 0x1
 385 017a 9C       		.byte	0x9c
 386 017b 8E010000 		.4byte	0x18e
 387 017f 10       		.uleb128 0x10
 388 0180 26010000 		.4byte	.LASF24
 389 0184 01       		.byte	0x1
 390 0185 B601     		.2byte	0x1b6
 391 0187 76000000 		.4byte	0x76
 392 018b 01       		.uleb128 0x1
 393 018c 50       		.byte	0x50
 394 018d 00       		.byte	0
 395 018e 12       		.uleb128 0x12
 396 018f 52000000 		.4byte	.LASF25
 397 0193 01       		.byte	0x1
 398 0194 CE01     		.2byte	0x1ce
 399 0196 76000000 		.4byte	0x76
 400 019a 00000000 		.4byte	.LFB5
 401 019e 10000000 		.4byte	.LFE5-.LFB5
 402 01a2 01       		.uleb128 0x1
 403 01a3 9C       		.byte	0x9c
 404 01a4 10       		.uleb128 0x10
 405 01a5 18010000 		.4byte	.LASF26
 406 01a9 01       		.byte	0x1
 407 01aa D001     		.2byte	0x1d0
 408 01ac 76000000 		.4byte	0x76
 409 01b0 01       		.uleb128 0x1
 410 01b1 50       		.byte	0x50
 411 01b2 00       		.byte	0
 412 01b3 00       		.byte	0
 413              		.section	.debug_abbrev,"",%progbits
 414              	.Ldebug_abbrev0:
 415 0000 01       		.uleb128 0x1
 416 0001 11       		.uleb128 0x11
 417 0002 01       		.byte	0x1
 418 0003 25       		.uleb128 0x25
 419 0004 0E       		.uleb128 0xe
 420 0005 13       		.uleb128 0x13
 421 0006 0B       		.uleb128 0xb
 422 0007 03       		.uleb128 0x3
 423 0008 0E       		.uleb128 0xe
 424 0009 1B       		.uleb128 0x1b
 425 000a 0E       		.uleb128 0xe
 426 000b 55       		.uleb128 0x55
 427 000c 17       		.uleb128 0x17
 428 000d 11       		.uleb128 0x11
 429 000e 01       		.uleb128 0x1
 430 000f 10       		.uleb128 0x10
 431 0010 17       		.uleb128 0x17
 432 0011 00       		.byte	0
 433 0012 00       		.byte	0
 434 0013 02       		.uleb128 0x2
 435 0014 24       		.uleb128 0x24
 436 0015 00       		.byte	0
 437 0016 0B       		.uleb128 0xb
 438 0017 0B       		.uleb128 0xb
 439 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 17


 440 0019 0B       		.uleb128 0xb
 441 001a 03       		.uleb128 0x3
 442 001b 0E       		.uleb128 0xe
 443 001c 00       		.byte	0
 444 001d 00       		.byte	0
 445 001e 03       		.uleb128 0x3
 446 001f 24       		.uleb128 0x24
 447 0020 00       		.byte	0
 448 0021 0B       		.uleb128 0xb
 449 0022 0B       		.uleb128 0xb
 450 0023 3E       		.uleb128 0x3e
 451 0024 0B       		.uleb128 0xb
 452 0025 03       		.uleb128 0x3
 453 0026 08       		.uleb128 0x8
 454 0027 00       		.byte	0
 455 0028 00       		.byte	0
 456 0029 04       		.uleb128 0x4
 457 002a 16       		.uleb128 0x16
 458 002b 00       		.byte	0
 459 002c 03       		.uleb128 0x3
 460 002d 0E       		.uleb128 0xe
 461 002e 3A       		.uleb128 0x3a
 462 002f 0B       		.uleb128 0xb
 463 0030 3B       		.uleb128 0x3b
 464 0031 0B       		.uleb128 0xb
 465 0032 49       		.uleb128 0x49
 466 0033 13       		.uleb128 0x13
 467 0034 00       		.byte	0
 468 0035 00       		.byte	0
 469 0036 05       		.uleb128 0x5
 470 0037 16       		.uleb128 0x16
 471 0038 00       		.byte	0
 472 0039 03       		.uleb128 0x3
 473 003a 0E       		.uleb128 0xe
 474 003b 3A       		.uleb128 0x3a
 475 003c 0B       		.uleb128 0xb
 476 003d 3B       		.uleb128 0x3b
 477 003e 05       		.uleb128 0x5
 478 003f 49       		.uleb128 0x49
 479 0040 13       		.uleb128 0x13
 480 0041 00       		.byte	0
 481 0042 00       		.byte	0
 482 0043 06       		.uleb128 0x6
 483 0044 35       		.uleb128 0x35
 484 0045 00       		.byte	0
 485 0046 49       		.uleb128 0x49
 486 0047 13       		.uleb128 0x13
 487 0048 00       		.byte	0
 488 0049 00       		.byte	0
 489 004a 07       		.uleb128 0x7
 490 004b 2E       		.uleb128 0x2e
 491 004c 01       		.byte	0x1
 492 004d 3F       		.uleb128 0x3f
 493 004e 19       		.uleb128 0x19
 494 004f 03       		.uleb128 0x3
 495 0050 0E       		.uleb128 0xe
 496 0051 3A       		.uleb128 0x3a
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 18


 497 0052 0B       		.uleb128 0xb
 498 0053 3B       		.uleb128 0x3b
 499 0054 0B       		.uleb128 0xb
 500 0055 27       		.uleb128 0x27
 501 0056 19       		.uleb128 0x19
 502 0057 11       		.uleb128 0x11
 503 0058 01       		.uleb128 0x1
 504 0059 12       		.uleb128 0x12
 505 005a 06       		.uleb128 0x6
 506 005b 40       		.uleb128 0x40
 507 005c 18       		.uleb128 0x18
 508 005d 9742     		.uleb128 0x2117
 509 005f 19       		.uleb128 0x19
 510 0060 01       		.uleb128 0x1
 511 0061 13       		.uleb128 0x13
 512 0062 00       		.byte	0
 513 0063 00       		.byte	0
 514 0064 08       		.uleb128 0x8
 515 0065 05       		.uleb128 0x5
 516 0066 00       		.byte	0
 517 0067 03       		.uleb128 0x3
 518 0068 0E       		.uleb128 0xe
 519 0069 3A       		.uleb128 0x3a
 520 006a 0B       		.uleb128 0xb
 521 006b 3B       		.uleb128 0x3b
 522 006c 0B       		.uleb128 0xb
 523 006d 49       		.uleb128 0x49
 524 006e 13       		.uleb128 0x13
 525 006f 02       		.uleb128 0x2
 526 0070 18       		.uleb128 0x18
 527 0071 00       		.byte	0
 528 0072 00       		.byte	0
 529 0073 09       		.uleb128 0x9
 530 0074 2E       		.uleb128 0x2e
 531 0075 01       		.byte	0x1
 532 0076 3F       		.uleb128 0x3f
 533 0077 19       		.uleb128 0x19
 534 0078 03       		.uleb128 0x3
 535 0079 0E       		.uleb128 0xe
 536 007a 3A       		.uleb128 0x3a
 537 007b 0B       		.uleb128 0xb
 538 007c 3B       		.uleb128 0x3b
 539 007d 05       		.uleb128 0x5
 540 007e 27       		.uleb128 0x27
 541 007f 19       		.uleb128 0x19
 542 0080 11       		.uleb128 0x11
 543 0081 01       		.uleb128 0x1
 544 0082 12       		.uleb128 0x12
 545 0083 06       		.uleb128 0x6
 546 0084 40       		.uleb128 0x40
 547 0085 18       		.uleb128 0x18
 548 0086 9742     		.uleb128 0x2117
 549 0088 19       		.uleb128 0x19
 550 0089 01       		.uleb128 0x1
 551 008a 13       		.uleb128 0x13
 552 008b 00       		.byte	0
 553 008c 00       		.byte	0
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 19


 554 008d 0A       		.uleb128 0xa
 555 008e 05       		.uleb128 0x5
 556 008f 00       		.byte	0
 557 0090 03       		.uleb128 0x3
 558 0091 0E       		.uleb128 0xe
 559 0092 3A       		.uleb128 0x3a
 560 0093 0B       		.uleb128 0xb
 561 0094 3B       		.uleb128 0x3b
 562 0095 05       		.uleb128 0x5
 563 0096 49       		.uleb128 0x49
 564 0097 13       		.uleb128 0x13
 565 0098 02       		.uleb128 0x2
 566 0099 17       		.uleb128 0x17
 567 009a 00       		.byte	0
 568 009b 00       		.byte	0
 569 009c 0B       		.uleb128 0xb
 570 009d 34       		.uleb128 0x34
 571 009e 00       		.byte	0
 572 009f 03       		.uleb128 0x3
 573 00a0 08       		.uleb128 0x8
 574 00a1 3A       		.uleb128 0x3a
 575 00a2 0B       		.uleb128 0xb
 576 00a3 3B       		.uleb128 0x3b
 577 00a4 05       		.uleb128 0x5
 578 00a5 49       		.uleb128 0x49
 579 00a6 13       		.uleb128 0x13
 580 00a7 02       		.uleb128 0x2
 581 00a8 17       		.uleb128 0x17
 582 00a9 00       		.byte	0
 583 00aa 00       		.byte	0
 584 00ab 0C       		.uleb128 0xc
 585 00ac 898201   		.uleb128 0x4109
 586 00af 00       		.byte	0
 587 00b0 11       		.uleb128 0x11
 588 00b1 01       		.uleb128 0x1
 589 00b2 31       		.uleb128 0x31
 590 00b3 13       		.uleb128 0x13
 591 00b4 00       		.byte	0
 592 00b5 00       		.byte	0
 593 00b6 0D       		.uleb128 0xd
 594 00b7 0F       		.uleb128 0xf
 595 00b8 00       		.byte	0
 596 00b9 0B       		.uleb128 0xb
 597 00ba 0B       		.uleb128 0xb
 598 00bb 49       		.uleb128 0x49
 599 00bc 13       		.uleb128 0x13
 600 00bd 00       		.byte	0
 601 00be 00       		.byte	0
 602 00bf 0E       		.uleb128 0xe
 603 00c0 26       		.uleb128 0x26
 604 00c1 00       		.byte	0
 605 00c2 49       		.uleb128 0x49
 606 00c3 13       		.uleb128 0x13
 607 00c4 00       		.byte	0
 608 00c5 00       		.byte	0
 609 00c6 0F       		.uleb128 0xf
 610 00c7 2E       		.uleb128 0x2e
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 20


 611 00c8 01       		.byte	0x1
 612 00c9 3F       		.uleb128 0x3f
 613 00ca 19       		.uleb128 0x19
 614 00cb 03       		.uleb128 0x3
 615 00cc 0E       		.uleb128 0xe
 616 00cd 3A       		.uleb128 0x3a
 617 00ce 0B       		.uleb128 0xb
 618 00cf 3B       		.uleb128 0x3b
 619 00d0 05       		.uleb128 0x5
 620 00d1 27       		.uleb128 0x27
 621 00d2 19       		.uleb128 0x19
 622 00d3 49       		.uleb128 0x49
 623 00d4 13       		.uleb128 0x13
 624 00d5 11       		.uleb128 0x11
 625 00d6 01       		.uleb128 0x1
 626 00d7 12       		.uleb128 0x12
 627 00d8 06       		.uleb128 0x6
 628 00d9 40       		.uleb128 0x40
 629 00da 18       		.uleb128 0x18
 630 00db 9742     		.uleb128 0x2117
 631 00dd 19       		.uleb128 0x19
 632 00de 01       		.uleb128 0x1
 633 00df 13       		.uleb128 0x13
 634 00e0 00       		.byte	0
 635 00e1 00       		.byte	0
 636 00e2 10       		.uleb128 0x10
 637 00e3 34       		.uleb128 0x34
 638 00e4 00       		.byte	0
 639 00e5 03       		.uleb128 0x3
 640 00e6 0E       		.uleb128 0xe
 641 00e7 3A       		.uleb128 0x3a
 642 00e8 0B       		.uleb128 0xb
 643 00e9 3B       		.uleb128 0x3b
 644 00ea 05       		.uleb128 0x5
 645 00eb 49       		.uleb128 0x49
 646 00ec 13       		.uleb128 0x13
 647 00ed 02       		.uleb128 0x2
 648 00ee 18       		.uleb128 0x18
 649 00ef 00       		.byte	0
 650 00f0 00       		.byte	0
 651 00f1 11       		.uleb128 0x11
 652 00f2 2E       		.uleb128 0x2e
 653 00f3 00       		.byte	0
 654 00f4 3F       		.uleb128 0x3f
 655 00f5 19       		.uleb128 0x19
 656 00f6 03       		.uleb128 0x3
 657 00f7 0E       		.uleb128 0xe
 658 00f8 3A       		.uleb128 0x3a
 659 00f9 0B       		.uleb128 0xb
 660 00fa 3B       		.uleb128 0x3b
 661 00fb 05       		.uleb128 0x5
 662 00fc 27       		.uleb128 0x27
 663 00fd 19       		.uleb128 0x19
 664 00fe 11       		.uleb128 0x11
 665 00ff 01       		.uleb128 0x1
 666 0100 12       		.uleb128 0x12
 667 0101 06       		.uleb128 0x6
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 21


 668 0102 40       		.uleb128 0x40
 669 0103 18       		.uleb128 0x18
 670 0104 9742     		.uleb128 0x2117
 671 0106 19       		.uleb128 0x19
 672 0107 00       		.byte	0
 673 0108 00       		.byte	0
 674 0109 12       		.uleb128 0x12
 675 010a 2E       		.uleb128 0x2e
 676 010b 01       		.byte	0x1
 677 010c 3F       		.uleb128 0x3f
 678 010d 19       		.uleb128 0x19
 679 010e 03       		.uleb128 0x3
 680 010f 0E       		.uleb128 0xe
 681 0110 3A       		.uleb128 0x3a
 682 0111 0B       		.uleb128 0xb
 683 0112 3B       		.uleb128 0x3b
 684 0113 05       		.uleb128 0x5
 685 0114 27       		.uleb128 0x27
 686 0115 19       		.uleb128 0x19
 687 0116 49       		.uleb128 0x49
 688 0117 13       		.uleb128 0x13
 689 0118 11       		.uleb128 0x11
 690 0119 01       		.uleb128 0x1
 691 011a 12       		.uleb128 0x12
 692 011b 06       		.uleb128 0x6
 693 011c 40       		.uleb128 0x40
 694 011d 18       		.uleb128 0x18
 695 011e 9742     		.uleb128 0x2117
 696 0120 19       		.uleb128 0x19
 697 0121 00       		.byte	0
 698 0122 00       		.byte	0
 699 0123 00       		.byte	0
 700              		.section	.debug_loc,"",%progbits
 701              	.Ldebug_loc0:
 702              	.LLST0:
 703 0000 00000000 		.4byte	.LVL1
 704 0004 0A000000 		.4byte	.LVL3
 705 0008 0100     		.2byte	0x1
 706 000a 50       		.byte	0x50
 707 000b 0A000000 		.4byte	.LVL3
 708 000f 16000000 		.4byte	.LVL8
 709 0013 0100     		.2byte	0x1
 710 0015 56       		.byte	0x56
 711 0016 16000000 		.4byte	.LVL8
 712 001a 18000000 		.4byte	.LFE1
 713 001e 0400     		.2byte	0x4
 714 0020 F3       		.byte	0xf3
 715 0021 01       		.uleb128 0x1
 716 0022 50       		.byte	0x50
 717 0023 9F       		.byte	0x9f
 718 0024 00000000 		.4byte	0
 719 0028 00000000 		.4byte	0
 720              	.LLST1:
 721 002c 00000000 		.4byte	.LVL1
 722 0030 0A000000 		.4byte	.LVL3
 723 0034 0100     		.2byte	0x1
 724 0036 51       		.byte	0x51
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 22


 725 0037 0A000000 		.4byte	.LVL3
 726 003b 16000000 		.4byte	.LVL7
 727 003f 0100     		.2byte	0x1
 728 0041 55       		.byte	0x55
 729 0042 16000000 		.4byte	.LVL7
 730 0046 18000000 		.4byte	.LFE1
 731 004a 0400     		.2byte	0x4
 732 004c F3       		.byte	0xf3
 733 004d 01       		.uleb128 0x1
 734 004e 51       		.byte	0x51
 735 004f 9F       		.byte	0x9f
 736 0050 00000000 		.4byte	0
 737 0054 00000000 		.4byte	0
 738              	.LLST2:
 739 0058 06000000 		.4byte	.LVL2
 740 005c 0A000000 		.4byte	.LVL3
 741 0060 0200     		.2byte	0x2
 742 0062 30       		.byte	0x30
 743 0063 9F       		.byte	0x9f
 744 0064 0A000000 		.4byte	.LVL3
 745 0068 16000000 		.4byte	.LVL6
 746 006c 0100     		.2byte	0x1
 747 006e 54       		.byte	0x54
 748 006f 00000000 		.4byte	0
 749 0073 00000000 		.4byte	0
 750              		.section	.debug_aranges,"",%progbits
 751 0000 44000000 		.4byte	0x44
 752 0004 0200     		.2byte	0x2
 753 0006 00000000 		.4byte	.Ldebug_info0
 754 000a 04       		.byte	0x4
 755 000b 00       		.byte	0
 756 000c 0000     		.2byte	0
 757 000e 0000     		.2byte	0
 758 0010 00000000 		.4byte	.LFB0
 759 0014 1C000000 		.4byte	.LFE0-.LFB0
 760 0018 00000000 		.4byte	.LFB1
 761 001c 18000000 		.4byte	.LFE1-.LFB1
 762 0020 00000000 		.4byte	.LFB2
 763 0024 10000000 		.4byte	.LFE2-.LFB2
 764 0028 00000000 		.4byte	.LFB3
 765 002c 20000000 		.4byte	.LFE3-.LFB3
 766 0030 00000000 		.4byte	.LFB4
 767 0034 10000000 		.4byte	.LFE4-.LFB4
 768 0038 00000000 		.4byte	.LFB5
 769 003c 10000000 		.4byte	.LFE5-.LFB5
 770 0040 00000000 		.4byte	0
 771 0044 00000000 		.4byte	0
 772              		.section	.debug_ranges,"",%progbits
 773              	.Ldebug_ranges0:
 774 0000 00000000 		.4byte	.LFB0
 775 0004 1C000000 		.4byte	.LFE0
 776 0008 00000000 		.4byte	.LFB1
 777 000c 18000000 		.4byte	.LFE1
 778 0010 00000000 		.4byte	.LFB2
 779 0014 10000000 		.4byte	.LFE2
 780 0018 00000000 		.4byte	.LFB3
 781 001c 20000000 		.4byte	.LFE3
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 23


 782 0020 00000000 		.4byte	.LFB4
 783 0024 10000000 		.4byte	.LFE4
 784 0028 00000000 		.4byte	.LFB5
 785 002c 10000000 		.4byte	.LFE5
 786 0030 00000000 		.4byte	0
 787 0034 00000000 		.4byte	0
 788              		.section	.debug_line,"",%progbits
 789              	.Ldebug_line0:
 790 0000 F3000000 		.section	.debug_str,"MS",%progbits,1
 790      02006300 
 790      00000201 
 790      FB0E0D00 
 790      01010101 
 791              	.LASF14:
 792 0000 72656733 		.ascii	"reg32\000"
 792      3200
 793              	.LASF20:
 794 0006 636F756E 		.ascii	"count\000"
 794      7400
 795              	.LASF18:
 796 000c 74784461 		.ascii	"txData\000"
 796      746100
 797              	.LASF3:
 798 0013 73686F72 		.ascii	"short unsigned int\000"
 798      7420756E 
 798      7369676E 
 798      65642069 
 798      6E7400
 799              	.LASF8:
 800 0026 756E7369 		.ascii	"unsigned int\000"
 800      676E6564 
 800      20696E74 
 800      00
 801              	.LASF23:
 802 0033 55415254 		.ascii	"UART_SpiUartDisableIntRx\000"
 802      5F537069 
 802      55617274 
 802      44697361 
 802      626C6549 
 803              	.LASF11:
 804 004c 666C6F61 		.ascii	"float\000"
 804      7400
 805              	.LASF25:
 806 0052 55415254 		.ascii	"UART_SpiUartDisableIntTx\000"
 806      5F537069 
 806      55617274 
 806      44697361 
 806      626C6549 
 807              	.LASF21:
 808 006b 73697A65 		.ascii	"size\000"
 808      00
 809              	.LASF5:
 810 0070 6C6F6E67 		.ascii	"long unsigned int\000"
 810      20756E73 
 810      69676E65 
 810      6420696E 
 810      7400
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 24


 811              	.LASF9:
 812 0082 75696E74 		.ascii	"uint8\000"
 812      3800
 813              	.LASF19:
 814 0088 77724275 		.ascii	"wrBuf\000"
 814      6600
 815              	.LASF1:
 816 008e 756E7369 		.ascii	"unsigned char\000"
 816      676E6564 
 816      20636861 
 816      7200
 817              	.LASF12:
 818 009c 646F7562 		.ascii	"double\000"
 818      6C6500
 819              	.LASF29:
 820 00a3 433A5C55 		.ascii	"C:\\Users\\edtriccorp\\Documents\\GitHub\\LIDAR-Lib"
 820      73657273 
 820      5C656474 
 820      72696363 
 820      6F72705C 
 821 00d1 72617279 		.ascii	"rary\\LIDAR.cydsn\000"
 821      5C4C4944 
 821      41522E63 
 821      7964736E 
 821      00
 822              	.LASF10:
 823 00e2 75696E74 		.ascii	"uint32\000"
 823      333200
 824              	.LASF30:
 825 00e9 55415254 		.ascii	"UART_SpiUartClearTxBuffer\000"
 825      5F537069 
 825      55617274 
 825      436C6561 
 825      72547842 
 826              	.LASF17:
 827 0103 55415254 		.ascii	"UART_SpiUartPutArray\000"
 827      5F537069 
 827      55617274 
 827      50757441 
 827      72726179 
 828              	.LASF26:
 829 0118 696E7453 		.ascii	"intSourceMask\000"
 829      6F757263 
 829      654D6173 
 829      6B00
 830              	.LASF24:
 831 0126 696E7453 		.ascii	"intSource\000"
 831      6F757263 
 831      6500
 832              	.LASF7:
 833 0130 6C6F6E67 		.ascii	"long long unsigned int\000"
 833      206C6F6E 
 833      6720756E 
 833      7369676E 
 833      65642069 
 834              	.LASF15:
 835 0147 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 25


 835      74797065 
 835      00
 836              	.LASF6:
 837 0150 6C6F6E67 		.ascii	"long long int\000"
 837      206C6F6E 
 837      6720696E 
 837      7400
 838              	.LASF16:
 839 015e 55415254 		.ascii	"UART_SpiUartWriteTxData\000"
 839      5F537069 
 839      55617274 
 839      57726974 
 839      65547844 
 840              	.LASF22:
 841 0176 55415254 		.ascii	"UART_SpiUartGetTxBufferSize\000"
 841      5F537069 
 841      55617274 
 841      47657454 
 841      78427566 
 842              	.LASF27:
 843 0192 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 843      4320342E 
 843      392E3320 
 843      32303135 
 843      30333033 
 844 01c5 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 844      20726576 
 844      6973696F 
 844      6E203232 
 844      31323230 
 845 01f8 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 845      66756E63 
 845      74696F6E 
 845      2D736563 
 845      74696F6E 
 846              	.LASF2:
 847 0220 73686F72 		.ascii	"short int\000"
 847      7420696E 
 847      7400
 848              	.LASF28:
 849 022a 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_SPI_UART.c\000"
 849      6E657261 
 849      7465645F 
 849      536F7572 
 849      63655C50 
 850              	.LASF4:
 851 0253 6C6F6E67 		.ascii	"long int\000"
 851      20696E74 
 851      00
 852              	.LASF13:
 853 025c 63686172 		.ascii	"char\000"
 853      00
 854              	.LASF0:
 855 0261 7369676E 		.ascii	"signed char\000"
 855      65642063 
 855      68617200 
 856              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
ARM GAS  C:\Users\EDTRIC~1\AppData\Local\Temp\ccG7XeIc.s 			page 26


